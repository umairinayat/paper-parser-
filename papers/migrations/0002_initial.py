# Generated by Django 5.1.1 on 2025-07-26 23:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("papers", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="paper",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="paperanalysis",
            name="paper",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="analysis",
                to="papers.paper",
            ),
        ),
        migrations.AddField(
            model_name="paperauthor",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="papers.author"
            ),
        ),
        migrations.AddField(
            model_name="paperauthor",
            name="paper",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="papers.paper"
            ),
        ),
        migrations.AddField(
            model_name="scrapingtask",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="searchquery",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="searchresult",
            name="paper",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="papers.paper"
            ),
        ),
        migrations.AddField(
            model_name="searchresult",
            name="search_query",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="papers.searchquery"
            ),
        ),
        migrations.AddField(
            model_name="searchquery",
            name="papers",
            field=models.ManyToManyField(
                through="papers.SearchResult", to="papers.paper"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(fields=["title"], name="papers_pape_title_d47a10_idx"),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(fields=["doi"], name="papers_pape_doi_905538_idx"),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["arxiv_id"], name="papers_pape_arxiv_i_571507_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["publication_date"], name="papers_pape_publica_1c177f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(fields=["source"], name="papers_pape_source_bf3fce_idx"),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["analysis_status"], name="papers_pape_analysi_cdda53_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="paperauthor",
            unique_together={("paper", "author", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="searchresult",
            unique_together={("search_query", "paper")},
        ),
    ]
